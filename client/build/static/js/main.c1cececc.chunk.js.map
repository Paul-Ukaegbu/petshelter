{"version":3,"sources":["components/AddPet.js","components/NavBar.js","components/AllPets.js","components/Main.js","components/Edit.js","components/Display.js","App.js","serviceWorker.js","index.js"],"names":["AddPet","useState","name","setName","type","setType","skill","setSkill","description","setDescription","errors","setErrors","properties","message","className","onSubmit","e","preventDefault","newPet","axios","post","then","res","console","log","data","navigate","catch","err","htmlFor","onChange","target","value","style","color","rows","cols","NavBar","to","AllPets","props","removeFromDom","pets","map","item","i","key","_id","onClick","id","delete","Main","setPets","useEffect","get","filter","pet","Edit","put","Display","setPet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c1cececc.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {navigate} from '@reach/router'\r\n\r\nconst AddPet = () =>{\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [type, setType] = useState(\"\")\r\n    const [skill, setSkill] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [errors, setErrors] = useState({\r\n        name:\"\",\r\n        type:\"\",\r\n        description:\"\",\r\n\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newPet = {name, type, skill, description}\r\n        axios.post(\"http://localhost:8000/api/pets\", newPet)\r\n        .then(res => {\r\n            console.log(res)\r\n            if(res.data.errors){\r\n                console.log(res.data.errors)\r\n                setErrors(res.data.errors)\r\n            }\r\n            else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p>{errors.name ? errors.name.properties.message:\"\"}</p>\r\n            <p>{errors.type ? errors.type.properties.message:\"\"}</p>\r\n            <p>{errors.description ? errors.description.properties.message:\"\"}</p>\r\n\r\n            <h3>Pet Shelter</h3> \r\n            <h6>Know a pet needing a home?</h6>      \r\n            <div className=\"d-flex justify-content-center\">            \r\n                <form onSubmit = {handleSubmit}>\r\n                    \r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input \r\n                    className = \"m-2 form-control\" \r\n                    type= \"text\" \r\n                    onChange = {e => setName (e.target.value)}/><br/>\r\n\r\n                    {errors.type ? <p style = {{color:\"red\"}}>{errors.type.message}</p> : \"\"}\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <input \r\n                    className = \"m-2 form-control\"\r\n                    type= \"text\" \r\n                    onChange = {e => setType (e.target.value)}/><br/>\r\n\r\n                    {errors.skill ? <p style = {{color:\"red\"}}>{errors.skill.message}</p> : \"\"}\r\n                    <label htmlFor=\"skill\">Skill(optional)</label>\r\n                    <input \r\n                    className = \"m-2 form-control\"\r\n                    type= \"text\" \r\n                    onChange = {e => setSkill (e.target.value)}/><br/>\r\n\r\n                    {errors.skill ? <p style = {{color:\"red\"}}>{errors.skill.message}</p> : \"\"}\r\n                    <label htmlFor=\"skill\">Skill(optional)</label>\r\n                    <input \r\n                    className = \"m-2 form-control\"\r\n                    type= \"text\" \r\n                    onChange = {e => setSkill (e.target.value)}/><br/>\r\n\r\n                    {errors.skill ? <p style = {{color:\"red\"}}>{errors.skill.message}</p> : \"\"}\r\n                    <label htmlFor=\"skill\">Skill(optional)</label>\r\n                    <input \r\n                    className = \"m-2 form-control\"\r\n                    type= \"text\" \r\n                    onChange = {e => setSkill (e.target.value)}/><br/>\r\n\r\n                    {errors.description ? <p style = {{color:\"red\"}}>{errors.description.message}</p> : \"\"}\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <input \r\n                    className = \"form-control\"\r\n                    type= \"textarea\" \r\n                    rows = \"6\" cols = \"50\" \r\n                    onChange = {e => setDescription (e.target.value)}/>\r\n                    <input \r\n                    className = \"m-2 btn btn-outline-dark\"\r\n                    type = \"submit\" \r\n                    value = \"create\"/>        \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddPet","import React from 'react'\r\nimport {Link} from '@reach/router'\r\nimport './Navbar.css'\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <div className = \"nav\">\r\n            <Link to = '/'>Home</Link>\r\n            <Link to = '/new'>Add Pet to the shelter</Link>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Link} from '@reach/router'\r\n\r\nconst AllPets = (props) => { \r\n    const{removeFromDom} = props //delete product from database \r\n    const deletePet = (id) =>{\r\n        axios.delete(`http://localhost:8000/api/pets/${id}`)\r\n        .then(res => {\r\n            removeFromDom(id) //deletes from DOM\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Pet Shelter</h1> \r\n            <h4>These pets are looking for a good home</h4>\r\n            <ul>\r\n                {props.pets.map((item, i) => {\r\n                    return(\r\n                        <div>\r\n                            <li key= {i}><Link to = {`/api/pets/${item._id}`}>{item.name}</Link></li> \r\n                            <li>{item.type}</li>\r\n                            <li>{item.description}</li>\r\n                            <li>{item.skill}</li>\r\n                            <li>{item.skill}</li>\r\n                            <li>{item.skill}</li>\r\n                            <button onClick = {(e) =>{deletePet(item._id)}}>Adobt Pet</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AllPets","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport AllPets from './AllPets'\r\n\r\nconst Main = () => {\r\n\r\n    const[pets, setPets] = useState([])\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pets\")\r\n        .then(res => setPets(res.data))\r\n    },[])\r\n\r\n    const removeFromDom = id =>{ //remove from DOM\r\n        setPets(pets.filter(pet => pet._id !== id))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <AllPets pets = {pets} removeFromDom = {removeFromDom}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Main","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {navigate} from '@reach/router'\r\n\r\nconst Edit = (props) =>{\r\n    const{id} = props\r\n    const [name, setName] = useState(\"\")\r\n    const [type, setType] = useState(\"\")\r\n    const [skill, setSkill] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [errors, setErrors] = useState({})\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pets/${id}`)\r\n        .then (res => {\r\n            setName(res.data.name)\r\n            setType(res.data.type)\r\n            setSkill(res.data.skill)\r\n            setDescription(res.data.description)\r\n        })\r\n    },[])//prevents useEffect from reloading (triggers once)\r\n\r\n\r\n    const handleUpdate = e => {\r\n        e.preventDefault() //prevents page from reloading when form is submitted\r\n        axios.put(`http://localhost:8000/api/pets/${id}`,{\r\n            name,\r\n            type, \r\n            skill,\r\n            description\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            if(res.data.errors){\r\n                setErrors(res.data.errors)\r\n            }\r\n            else{\r\n                navigate(\"/\")//for future use decide where you want to navigate to when edited\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit = {handleUpdate}>\r\n            {errors.name ? <p style = {{color:\"red\"}}>{errors.name.message}</p> : \"\"}\r\n            <input type= \"text\" value = {name} onChange = {e => setName (e.target.value)}/>\r\n\r\n            {errors.type ? <p style = {{color:\"red\"}}>{errors.type.message}</p> : \"\"}\r\n            <input type= \"text\" value = {type} onChange = {e => setType (e.target.value)}/>\r\n\r\n            {errors.description ? <p style = {{color:\"red\"}}>{errors.description.message}</p> : \"\"}\r\n            <input type= \"textarea\"  value = {description}rows = \"4\" cols = \"20\" onChange = {e => setDescription (e.target.value)}/>\r\n\r\n            <input type = \"submit\" value = \"create\"/>        \r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Edit","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link} from '@reach/router'\r\nimport AllPets from './AllPets'\r\n\r\nconst Display = (props) =>{\r\n    const [pet, setPet] = useState({})\r\n    \r\n    useEffect(() =>{\r\n        axios.get(`http://localhost:8000/api/pets/${props.id}`)\r\n        .then(res => {setPet({...res.data})})\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            <h1>{pet.name}</h1>\r\n            <p>{pet.type}</p>                      \r\n            <p>{pet.description}</p>\r\n            <p>{pet.skill}</p>\r\n            <Link to = {`/pets/${pet._id}/edit`}>Edit Pet</Link>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Display","import React from 'react';\nimport './App.css';\nimport AddPet from './components/AddPet'\nimport {Router} from '@reach/router'\nimport NavBar from \"./components/NavBar\"\nimport Main from './components/Main'\nimport Edit from './components/Edit'\nimport Display from './components/Display'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n  function App() {\n    return (\n      <div className=\"App\">\n        <div className = \"header\">\n          <NavBar/>\n        </div>\n        <Router>\n          <Main path = \"/\" />\n          <AddPet path = \"/new\"/>\n          <Edit path = \"/pets/:id/edit\" />\n          <Display path = \"/api/pets/:id\"/>\n        </Router>\n      \n      </div>\n    );\n  }\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}